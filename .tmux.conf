# -- general -------------------------------------------------------------------

set-option -g default-shell /bin/zsh
set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -sg escape-time 1                      # fastest command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s quiet on                           # disable various messages

set -g prefix C-a                         # GNU-Screen compatible prefix
unbind C-b
bind C-a send-prefix

set -g status-utf8 on                     # expect UTF-8
setw -g utf8 on
set-window-option -g utf8 on

set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
if 'which -s reattach-to-user-namespace' 'set -g default-command "exec initializing... 2> /dev/null & reattach-to-user-namespace $SHELL -l"'


# -- display -------------------------------------------------------------------

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
# renumber windows when a window is closed
set -g renumber-windows on

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# 24 hour clock
setw -g clock-mode-style 24

# clear both screen and history
bind -n C-l send-keys C-l \; run 'tmux clear-history'

# activity
set -g monitor-activity on
set -g visual-activity off

# tmux theme, colors and status line
# available themes:
#   - powerline (a powerline inspired theme)
#   - powerline_patched_font (a powerline inspired theme using a patched font)
tmux_conf_theme=powerline


# -- navigation ----------------------------------------------------------------

# create new session
# bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
bind Space last-window      # move to last active window

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind C-b choose-buffer # choose which buffer to paste from
bind C-y paste-buffer  # paste from the top pate buffer

# copy to Mac OSX pasteboard
if 'which -s reattach-to-user-namespace' 'bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# paste from Mac OSX pasteboard
if 'which -s reattach-to-user-namespace' 'bind C-v run "tmux set-buffer -- \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer"'

## CLIPBOARD selection integration
## Requires prefix key before the command key
# Copy tmux paste buffer to CLIPBOARD
if 'which -s xsel' 'bind C-c run "tmux show-buffer | xsel -i -b"'
# Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
if 'which -s xsel' 'bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"'

run-shell ~/projects/tmux/tmux-yank/yank.tmux

# -- user defined --------------------------------------------------------------

if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

# -- window split -----------------------------------------------------------------

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v

# -- status -----------------------------------------------------------------

set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-position top
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/projects/powerline/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/projects/powerline/tmux-powerline/powerline.sh right)"

# -- color -----------------------------------------------------------------

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green
